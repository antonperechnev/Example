version: "3.7"
services:
  api:
    build:
      context: ./sources
      dockerfile: Work.dockerfile
    env_file:
      - .env
    working_dir: /var/www/services/Work
    container_name: ${APP_NAME}-api
    restart: unless-stopped
    tty: true
    ports:
      - ${API_PORT}:${API_PORT}
    command: bash -c "export PYTHONPATH=/var/www/services/Work && python3 api/api.py"
    volumes:
      - ./sources/Project:/var/www/services/Work
    depends_on:
      - postgres
    networks:
      - app-network
  parser:
    build:
      context: ./sources
      dockerfile: Work.dockerfile
    env_file:
      - .env
    container_name: ${APP_NAME}-Project
    restart: unless-stopped
    tty: true
    volumes:
      - ./sources/Project:/var/www/services/Work
    working_dir: /var/www/services/Work
    command: bash -c "export PYTHONPATH=/var/www/services/Work && python3 parsers/last_news_parser.py"
    networks:
      - app-network
  postgres:
    image: postgres:11.6-alpine
    container_name: ${APP_NAME}-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./configs/postgres:/var/lib/postgresql/data
      - ./postgres:/etc/postgresql/11.6/main
    ports:
      - ${POSTGRES_PORT}:5432
    networks:
      - app-network


networks:
  app-network:
    driver: bridge